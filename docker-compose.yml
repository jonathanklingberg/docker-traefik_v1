version: "3.7"

########################### NETWORKS
networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge

########################### SERVICES
services:

############################# FRONTENDS

# Traefik - Reverse Proxy
# Create traefik.toml and rules dir and acme dir before running container.
  traefik:
    image: traefik:v1.7.16
    container_name: traefik
    hostname: traefik
    restart: unless-stopped
    networks:
      - default
      - traefik_proxy
    ports:
      - "80:80"
      - "443:443"
#      - "${TRAEFIK_DASHBOARD_PORT}:8080"
    domainname: ${DOMAINNAME}
    dns:
#      - ${PIHOLE_IP}
       - 1.1.1.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${USERDIR}/docker/traefik:/etc/traefik
      - ${USERDIR}/docker/shared:/shared
    environment:
      CF_API_EMAIL: ${CLOUDFLARE_EMAIL}
      CF_API_KEY: ${CLOUDFLARE_API_KEY}
#      DUCKDNS_TOKEN: ${DUCKDNS_TOKEN}
    labels:
      traefik.enable: "true"
      traefik.backend: traefik
      traefik.protocol: http
      traefik.port: 8080
      traefik.frontend.rule: Host:traefik.${DOMAINNAME}
#      traefik.frontend.rule: Host:${DOMAINNAME}; PathPrefixStrip: /traefik
      traefik.frontend.headers.SSLHost: traefik.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
#      traefik.frontend.auth.basic.users: '${HTTP_USERNAME}:${HTTP_PASSWORD}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

# OAuth - Forward Authentication
  oauth:
    image: thomseddon/traefik-forward-auth
    container_name: oauth
    hostname: oauth
    restart: always
    networks:
      - default
      - traefik_proxy
    environment:
      PROVIDERS_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      PROVIDERS_GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      SECRET: ${OAUTH_SECRET}
      COOKIE_DOMAIN: ${DOMAINNAME}
      INSECURE_COOKIE: "false"
      AUTH_HOST: oauth.${DOMAINNAME}
      URL_PATH: /_oauth
      WHITELIST: ${MY_EMAIL}
      LOG_LEVEL: info
      LIFETIME: 2592000 # 30 days
    labels:
      traefik.enable: "true"
      traefik.backend: oauth
      traefik.port: 4181
      traefik.frontend.rule: Host:oauth.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: oauth.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

# Portainer - Container Management
# Needs trailing / in the URL if using PathPrefixStrip
  portainer:
    image: portainer/portainer
    container_name: portainer
    hostname: portainer
    restart: unless-stopped
    networks:
      - traefik_proxy
#    ports:
#      - "${PORTAINER_PORT}:9000"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${USERDIR}/docker/portainer/data:/data
    environment:
      TZ: ${TZ}
    labels:
      traefik.enable: "true"
      traefik.backend: portainer
      traefik.protocol: http
      traefik.port: 9000
      traefik.frontend.rule: Host:portainer.${DOMAINNAME}
#      traefik.frontend.rule: Host${DOMAINNAME}; PathPrefixStrip: /portainer
      traefik.frontend.headers.SSLHost: portainer.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

# Heimdall - Unified Frontend Alternative
# Putting all services behind Oragnizr slows things down.
  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    hostname: heimdall
    restart: unless-stopped
    networks:
      - traefik_proxy
    # ports:
    #  - "${HEIMDALL_PORT}:80"
    volumes:
      - ${USERDIR}/docker/heimdall:/config
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    labels:
      traefik.enable: "true"
      traefik.backend: heimdall
      traefik.protocol: http
      traefik.port: 80
      traefik.frontend.rule: Host:${DOMAINNAME},www.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: ${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

# Varken - Monitor Plex, Sonarr, Radarr, and Other Data
  # varken:
  #   image: boerderij/varken
  #   hostname: varken
  #   container_name: varken
  #   restart: unless-stopped
  #   networks:
  #     - traefik_proxy
  #     - default
  #   volumes:
  #     - ${USERDIR}/docker/varken:/config
  #   environment:
  #     PUID: ${PUID}
  #     PGID: ${PGID}
  #     TZ: ${TZ}
  #     VRKN_GLOBAL_SONARR_SERVER_IDS: 1
  #     VRKN_GLOBAL_RADARR_SERVER_IDS: 1
  #     VRKN_GLOBAL_LIDARR_SERVER_IDS: "false"
  #     VRKN_GLOBAL_TAUTULLI_SERVER_IDS: 1
  #     VRKN_GLOBAL_OMBI_SERVER_IDS: "false"
  #     VRKN_GLOBAL_SICKCHILL_SERVER_IDS: "false"
  #     VRKN_GLOBAL_UNIFI_SERVER_IDS: 1
  #     VRKN_INFLUXDB_URL: ${SERVER_IP}
  #     VRKN_INFLUXDB_PORT: 8086
  #     VRKN_INFLUXDB_SSL: "false"
  #     VRKN_INFLUXDB_VERIFY_SSL: "false"
  #     VRKN_INFLUXDB_USERNAME: ${VARKEN_USER}
  #     VRKN_INFLUXDB_PASSWORD: ${VARKEN_PASS}
  #     VRKN_TAUTULLI_1_URL: ${SERVER_IP}:${TAUTULLI_PORT}
  #     VRKN_TAUTULLI_1_FALLBACK_IP: 1.1.1.1
  #     VRKN_TAUTULLI_1_APIKEY: ${TAUTULLI_API_KEY}
  #     VRKN_TAUTULLI_1_SSL: "false"
  #     VRKN_TAUTULLI_1_VERIFY_SSL: "false"
  #     VRKN_TAUTULLI_1_GET_ACTIVITY: "true"
  #     VRKN_TAUTULLI_1_GET_ACTIVITY_RUN_SECONDS: 30
  #     VRKN_TAUTULLI_1_GET_STATS: "true"
  #     VRKN_TAUTULLI_1_GET_STATS_RUN_SECONDS: 3600
  #     VRKN_SONARR_1_URL: ${SERVER_IP}:${SONARR_PORT}
  #     VRKN_SONARR_1_APIKEY: ${SONARR_API_KEY}
  #     VRKN_SONARR_1_SSL: "false"
  #     VRKN_SONARR_1_VERIFY_SSL: "false"
  #     VRKN_SONARR_1_MISSING_DAYS: 7
  #     VRKN_SONARR_1_MISSING_DAYS_RUN_SECONDS: 300
  #     VRKN_SONARR_1_FUTURE_DAYS: 1
  #     VRKN_SONARR_1_FUTURE_DAYS_RUN_SECONDS: 300
  #     VRKN_SONARR_1_QUEUE: "true"
  #     VRKN_SONARR_1_QUEUE_RUN_SECONDS: 300
  #     VRKN_RADARR_1_URL: ${SERVER_IP}:${RADARR_PORT}
  #     VRKN_RADARR_1_APIKEY: ${RADARR_API_KEY}
  #     VRKN_RADARR_1_SSL: "false"
  #     VRKN_RADARR_1_VERIFY_SSL: "false"
  #     VRKN_RADARR_1_QUEUE: "true"
  #     VRKN_RADARR_1_QUEUE_RUN_SECONDS: 300
  #     VRKN_RADARR_1_GET_MISSING: "true"
  #     VRKN_RADARR_1_GET_MISSING_RUN_SECONDS: 300
  #     VRKN_UNIFI_1_URL: ${UNIFI_HOST}
  #     VRKN_UNIFI_1_USERNAME: ${UNIFI_USER}
  #     VRKN_UNIFI_1_PASSWORD: ${UNIFI_PASS}
  #     VRKN_UNIFI_1_SITE: default
  #     VRKN_UNIFI_1_USG_NAME: USG
  #     VRKN_UNIFI_1_SSL: "true"
  #     VRKN_UNIFI_1_VERIFY_SSL: "false"
  #     VRKN_UNIFI_1_GET_USG_STATS_RUN_SECONDS: 300
  #
############################# DOWNLOADERS

# TransmissionBT - Torrent Downloader
# ONLY ACCESSIBLE THROUGH https://domain.com/transmission/web/ if using PathPrefix
  transmission-vpn:
    image: haugene/transmission-openvpn
    container_name: transmission-vpn
    hostname: transmission
    restart: unless-stopped
    networks:
      - traefik_proxy
      - default
    # ports:
    #   - "${TRANSMISSION_PORT}:9091"
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    dns:
      - 1.1.1.1
      - 1.0.0.1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${USERDIR}/docker/transmission-vpn/data:/data
      - ${USERDIR}/docker/transmission-vpn/config:/config
      - ${USERDIR}/Downloads:/downloads
      - /media:/nas
    environment:
      OPENVPN_PROVIDER: ${OPENVPN_PROVIDER}
      OPENVPN_USERNAME: ${OPENVPN_USERNAME}
      OPENVPN_PASSWORD: ${OPENVPN_PASSWORD}
      OPENVPN_CONFIG: "Finland-udp"
      OPENVPN_OPTS: --inactive 3600 --ping 10 --ping-exit 60
      LOCAL_NETWORK: "${LOCAL_NETWORK}"
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      UMASK_SET: 002
      TRANSMISSION_RPC_AUTHENTICATION_REQUIRED: "true"
      TRANSMISSION_RPC_HOST_WHITELIST: "127.0.0.1,$SERVER_IP"
      TRANSMISSION_RPC_PASSWORD: ${TRANSMISSION_RPC_PASSWORD}
      TRANSMISSION_RPC_USERNAME: ${TRANSMISSION_RPC_USERNAME}
      TRANSMISSION_UMASK: 002
      TRANSMISSION_RATIO_LIMIT: 0.01
      TRANSMISSION_RATIO_LIMIT_ENABLED: "true"
      TRANSMISSION_ALT_SPEED_DOWN: 2000
      TRANSMISSION_ALT_SPEED_ENABLED: "true"
      TRANSMISSION_ALT_SPEED_UP: 15
      TRANSMISSION_SPEED_LIMIT_DOWN: 6000
      TRANSMISSION_SPEED_LIMIT_DOWN_ENABLED: "true"
      TRANSMISSION_SPEED_LIMIT_UP: 30
      TRANSMISSION_SPEED_LIMIT_UP_ENABLED: "true"
      TRANSMISSION_INCOMPLETE_DIR: /downloads/incomplete
      TRANSMISSION_INCOMPLETE_DIR_ENABLED: "true"
      TRANSMISSION_WATCH_DIR: /downloads
      TRANSMISSION_WATCH_DIR_ENABLED: "true"
      TRANSMISSION_DOWNLOAD_DIR: /downloads/completed
    labels:
      traefik.enable: "true"
      traefik.backend: transmission-vpn
      traefik.protocol: http
      traefik.port: 9091
      traefik.frontend.rule: Host:trans.${DOMAINNAME}
#     traefik.frontend.rule: Host:${DOMAINNAME}; PathPrefix: /transmission
      traefik.frontend.headers.SSLHost: trans.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

# SABnzbd - Binary newsgrabber (NZB downloader)
# Disable SABNnzbd's built-in HTTPS support for traefik proxy to work
# Needs trailing / if using PathPrefix
  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    # hostname: sabnzbd
    restart: unless-stopped
    network_mode: container:transmission-vpn
    # networks:
    #   - traefik_proxy
    # ports:
    #   - "${SABNZBD_PORT}:8080"
    volumes:
      - ${USERDIR}/docker/sabnzbd:/config
      - ${USERDIR}/Downloads:/downloads
      - /media:/nas
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      UMASK_SET: 002
    labels:
      traefik.enable: "true"
      traefik.backend: sabnzbd
      traefik.protocol: http
      traefik.port: 8080
      traefik.frontend.rule: Host:sabnzbd.${DOMAINNAME}
#     traefik.frontend.rule: Host:${DOMAINNAME}; PathPrefix: /sabnzbd
      traefik.frontend.headers.SSLHost: sabnzbd.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

############################# INDEXERS

# NZBHydra2 - NZB meta search
  hydra:
    image: linuxserver/hydra2
    container_name: hydra
    hostname: hydra
    restart: unless-stopped
    networks:
      - traefik_proxy
    # ports:
    #   - "${NZBHYDRA_PORT}:5076"
    volumes:
      - ${USERDIR}/docker/hydra2:/config
      - ${USERDIR}/Downloads:/downloads
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    labels:
      traefik.enable: "true"
      traefik.backend: hydra
      traefik.protocol: http
      traefik.port: 5076
      traefik.frontend.rule: Host:hydra.${DOMAINNAME}
#     traefik.frontend.rule: Host:${DOMAINNAME}; PathPrefix: /hydra
      traefik.frontend.headers.SSLHost: hydra.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

############################# PVRS

# Radarr - Movie management
# Set url_base in radarr settings if using PathPrefix
  radarr:
#    image: aront/radarr #for mp4_automator support
    image: linuxserver/radarr
    container_name: radarr
    hostname: radarr
    restart: unless-stopped
    networks:
      - traefik_proxy
    # ports:
    #   - "${RADARR_PORT}:7878"
    volumes:
      - ${USERDIR}/docker/radarr:/config
      - ${USERDIR}/Downloads:/downloads
      - /media:/nas
#      - ${USERDIR}/docker/shared/mp4_automator:/config_mp4_automator
#      - /media/media/movies:/movies
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    labels:
      traefik.enable: "true"
      traefik.backend: radarr
      traefik.protocol: http
      traefik.port: 7878
      traefik.frontend.rule: Host:radarr.${DOMAINNAME}
#     traefik.frontend.rule: Host:${DOMAINNAME}; PathPrefix: /radarr
      traefik.frontend.headers.SSLHost: radarr.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

# Sonarr - TV Shows management
# Set url_base in sonarr settings if using PathPrefix
  sonarr:
#    image: aront/sonarr  #for mp4_automator support
    image: linuxserver/sonarr
    container_name: sonarr
    hostname: sonarr
    restart: unless-stopped
    networks:
      - traefik_proxy
    # ports:
    #   - "${SONARR_PORT}:8989"
    volumes:
      - ${USERDIR}/docker/sonarr:/config
      - ${USERDIR}/Downloads:/downloads
#      - /media/media/tvshows:/tv
      - /media:/nas
      - "/etc/localtime:/etc/localtime:ro"
#      - "${USERDIR}/docker/shared/mp4_automator:/config_mp4_automator:rw"
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    labels:
      traefik.enable: "true"
      traefik.backend: sonarr
      traefik.protocol: http
      traefik.port: 8989
      traefik.frontend.rule: Host:sonarr.${DOMAINNAME}
#     traefik.frontend.rule: Host:${DOMAINNAME}; PathPrefix: /sonarr
      traefik.frontend.headers.SSLHost: sonarr.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

############################# MEDIA

# Plex - Media Server
  plexms:
    image: plexinc/pms-docker:public
    container_name: plexms
    hostname: plexms
    restart: unless-stopped
    networks:
      - traefik_proxy
      - default
    ports:
      - "${PLEX_PORT}:32400/tcp"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
      - "1900:1900/udp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
      - "${PLEX_WEB_TOOLS_PORT}:33400"
    volumes:
      - ${USERDIR}/docker/plexms:/config
      - ${USERDIR}/Downloads:/Downloads
      - /media:/nas
      - /dev/shm:/transcode # Offload transcoding to RAM if you have enough RAM
#      - ${USERDIR}/Downloads/plex_tmp:/transcode
      - /media/jonathan/Archive/Movies/:/data/movies
    environment:
      TZ: ${TZ}
      HOSTNAME: "Plex"
      PLEX_CLAIM: ${PLEX_CLAIM}
      PLEX_UID: ${PUID}
      PLEX_GID: ${PGID}
      ADVERTISE_IP: http://${SERVER_IP}:${PLEX_PORT}/
    labels:
      traefik.enable: "true"
      traefik.backend: plexms
      traefik.protocol: http
      traefik.port: 32400
      traefik.frontend.rule: Host:plex.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: plex.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
#      traefik.frontend.auth.forward.address: "http://oauth:4181"
#      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
#      traefik.frontend.auth.forward.trustForwardHeader: "true"

# Tautulli - Previously PlexPy. Plex statistics and monitoring
# Set HTTP Root in Tautulli settings if using PathPrefix
  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    hostname: tautulli
    restart: unless-stopped
    networks:
      - traefik_proxy
    # ports:
    #   - "${TAUTULLI_PORT}:8181"
    volumes:
      - ${USERDIR}/docker/tautulli/config:/config
      - ${USERDIR}/docker/tautulli/logs:/logs:ro
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    labels:
      traefik.enable: "true"
      traefik.backend: tautulli
      traefik.protocol: http
      traefik.port: 8181
      traefik.frontend.rule: Host:tautulli.${DOMAINNAME}
#     traefik.frontend.rule: Host:${DOMAINNAME}; PathPrefix: /tautulli
      traefik.frontend.headers.SSLHost: tautulli.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

# Plex-Sync - For Syncing watched status between plex servers
#   plex-sync:
#     image: patsissons/plex-sync:develop
#     container_name: plex-sync
#     environment:
#       INITIAL_RUN: "true"
# #      DRY_RUN: 0
#       CRON_SCHEDULE: '*/5 * * * *'
#       SECTION_MAPS: ${SYN_PLEX}/${SYN_PLEX_HOLLYWOOD} ${NUC_PLEX}/${NUC_PLEX_HOLLYWOOD} | ${SYN_PLEX}/${SYN_PLEX_TVSHOWS} ${NUC_PLEX}/${NUC_PLEX_TVSHOWS} | ${SYN_PLEX}/${SYN_PLEX_BOLLYWOOD} ${NUC_PLEX}/${NUC_PLEX_BOLLYWOOD} | ${SYN_PLEX}/${SYN_PLEX_KOLLYWOOD} ${NUC_PLEX}/${NUC_PLEX_KOLLYWOOD} | ${SYN_PLEX}/${SYN_PLEX_TOLLYWOOD} ${NUC_PLEX}/${NUC_PLEX_TOLLYWOOD} | ${SYN_PLEX}/${SYN_PLEX_DOCMOVIES} ${NUC_PLEX}/${NUC_PLEX_DOCMOVIES} | ${SYN_PLEX}/${SYN_PLEX_DOCSHOWS} ${NUC_PLEX}/${NUC_PLEX_DOCSHOWS} | ${SYN_PLEX}/${SYN_PLEX_KIDSMOVIES} ${NUC_PLEX}/${NUC_PLEX_KIDSMOVIES} | ${SYN_PLEX}/${SYN_PLEX_INTERNATIONAL} ${NUC_PLEX}/${NUC_PLEX_INTERNATIONAL}
#     restart: unless-stopped

# Telly Tv- IPTV proxy for Plex
# https://hub.docker.com/r/tellytv/telly
# https://github.com/tellytv/telly/wiki/Docker-Walkthrough%3A-Linux-with-config-file
# https://github.com/tellytv/telly/wiki/Adding-Telly-to-Plex
# Telly uses port 6077
# In plex, the DVR IP will be http://HostIP:6077
# EPG data will be at http://HostIP:6077/epg.xml
  # tellytv:
  #   image: tellytv/telly:dev-ffmpeg
  #   container_name: tellytv
  #   hostname: tellytv
  #   environment:
  #     - TZ=${TZ}
  #   network_mode: host
  #   volumes:
  #     - ${USERDIR}/docker/telly/telly.config.toml:/etc/telly/telly.config.toml
  #   restart: unless-stopped

############################# MEDIA FILE MANAGEMENT

# Bazarr - Subtitle Management
  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    hostname: bazarr
    restart: unless-stopped
    networks:
      - traefik_proxy
    # ports:
    #   - "${BAZARR_PORT}:6767"
    volumes:
      - ${USERDIR}/docker/bazarr:/config
      - /media:/nas
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    labels:
      traefik.enable: "true"
      traefik.backend: bazarr
      traefik.protocol: http
      traefik.port: 6767
      traefik.frontend.rule: Host:bazarr.${DOMAINNAME}
#     traefik.frontend.rule: Host:${DOMAINNAME}; PathPrefix: /bazarr
      traefik.frontend.headers.SSLHost: bazarr.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

# Handbrake - Video Conversion (Transcoding and compression)
  handbrake:
    image: jlesage/handbrake
    container_name: handbrake
    hostname: handbrake
    restart: unless-stopped
    networks:
      - traefik_proxy
#    ports:
#      - "${HANDBRAKE_PORT}:5800"
    volumes:
      - ${USERDIR}/Downloads:/downloads:ro
      - ${USERDIR}/docker/handbrake/config:/config:rw
      - ${USERDIR}/docker/handbrake/watch:/watch:rw
      - ${USERDIR}/Downloads/wip_media:/output:rw
      - /media:/nas
    environment:
      USER_ID: ${PUID}
      GROUP_ID: ${PGID}
      UMASK: 002
      TZ: ${TZ}
      KEEP_APP_RUNNING: 1
      CLEAN_TMP_DIR: 1
      DISPLAY_WIDTH: 1600
      DISPLAY_HEIGHT: 960
      AUTOMATED_CONVERSION_KEEP_SOURCE: 1
      VNC_PASSWORD: ${HANDBRAKE_VNC_PASSWD}
    labels:
      traefik.enable: "true"
      traefik.backend: handbrake
      traefik.protocol: http
      traefik.port: 5800
      traefik.frontend.rule: Host:handbrake.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: handbrake.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

# MKVToolNix - Video Editing (Remuxing - changing media container while keeping original source quality)
  mkvtoolnix:
    image: jlesage/mkvtoolnix
    container_name: mkvtoolnix
    hostname: mkvtoolnix
    restart: unless-stopped
    networks:
      - traefik_proxy
#    ports:
#      - "${MKVTOOLNIX_PORT}:5800"
    volumes:
      - ${USERDIR}/Downloads:/downloads:rw
      - ${USERDIR}/docker/mkvtoolnix/config:/config:rw
      - /media:/nas
    environment:
      USER_ID: ${PUID}
      GROUP_ID: ${PGID}
      UMASK: 002
      TZ: ${TZ}
      KEEP_APP_RUNNING: 1
      CLEAN_TMP_DIR: 1
      DISPLAY_WIDTH: 1600
      DISPLAY_HEIGHT: 960
      VNC_PASSWORD: ${MKVTOOLNIX_VNC_PASSWD}
    labels:
      traefik.enable: "true"
      traefik.backend: mkvtoolnix
      traefik.protocol: http
      traefik.port: 5800
      traefik.frontend.rule: Host:mkvtoolnix.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: mkvtoolnix.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

# FileBot - File renamer
  filebot:
    image: jlesage/filebot
    container_name: filebot
    hostname: filebot
    restart: unless-stopped
    networks:
      - traefik_proxy
#    ports:
#      - "${FILEBOT_PORT}:5800"
    volumes:
      - ${USERDIR}/docker/filebot:/config
      - /media:/nas
      - ${USERDIR}/Downloads:/downloads
    environment:
      USER_ID: ${PUID}
      GROUP_ID: ${PGID}
      TZ: ${TZ}
      UMASK: 002
      KEEP_APP_RUNNING: 1
      CLEAN_TMP_DIR: 1
      CLEAN_TMP_DIR: 1
      DISPLAY_WIDTH: 1600
      DISPLAY_HEIGHT: 960
      VNC_PASSWD: ${FILEBOT_VNC_PASSWD}
    labels:
      traefik.enable: "true"
      traefik.backend: filebot
      traefik.protocol: http
      traefik.port: 5800
      traefik.frontend.rule: Host:filebot.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: filebot.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

############################# UTILITIES

# Firefox - Web Broswer
  firefox:
    image: jlesage/firefox
    container_name: firefox
    hostname: firefox
    restart: unless-stopped
    networks:
      - traefik_proxy
#    ports:
#      - "${FIREFOX_PORT}:5800"
    volumes:
      - ${USERDIR}/docker/firefox:/config
      - ${USERDIR}/Downloads/completed:/config/downloads
      - /dev/shm:/dev/shm
      - ${USERDIR}/docker/shared:/shared
    environment:
      USER_ID: ${PUID}
      GROUP_ID: ${PGID}
      TZ: ${TZ}
      UMASK: 002
      KEEP_APP_RUNNING: 1
      CLEAN_TMP_DIR: 1
      DISPLAY_WIDTH: 1600
      DISPLAY_HEIGHT: 960
      VNC_PASSWD: ${FIREFOX_VNC_PASSWD}
    labels:
      traefik.enable: "true"
      traefik.backend: firefox
      traefik.protocol: http
      traefik.port: 5800
      traefik.frontend.rule: Host:firefox.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: firefox.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

# Glances - System Information
  glances:
    image: nicolargo/glances
    hostname: glances
    container_name: glances
    restart: unless-stopped
    privileged: true
#    network_mode: host
    networks:
      - traefik_proxy
#    ports:
#      - "${GLANCES_PORT}:61208"
    pid: host
    volumes:
      - ${USERDIR}/docker/glances/glances.conf:/glances/conf/glances.conf # Use this if you want to add a glances.conf file
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
#      GLANCES_OPT: "-C /glances/conf/glances.conf --quiet --export influxdb"
      GLANCES_OPT: "-w"
    labels:
      traefik.enable: "true"
      traefik.backend: glances
      traefik.protocol: http
      traefik.port: 61208
      traefik.frontend.rule: Host:glances.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: glances.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

# Logarr - Log Management
  logarr:
    image: monitorr/logarr
    container_name: logarr
    hostname: logarr
    restart: unless-stopped
    networks:
      - traefik_proxy
#    ports:
#     - "${LOGARR_PORT}:80"
    volumes:
      - ${USERDIR}/docker/logarr/config:/config
      - ${USERDIR}/docker/logarr/logs:/var/log/logarrlogs
    environment:
      TZ: ${TZ}
    labels:
      traefik.enable: "true"
      traefik.backend: logarr
      traefik.protocol: http
      traefik.port: 80
      traefik.frontend.rule: Host:logarr.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: logarr.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

# Monitorr - Webfront to display the status of any webapp or service
#   monitorr:
#     image: monitorr/monitorr
#     container_name: monitorr
#     hostname: monitorr
#     restart: unless-stopped
#     networks:
#       - traefik_proxy
# #    ports:
# #      - "${MONITORR_PORT}:80"
#     volumes:
#       - ${USERDIR}/docker/monitorr:/app
#     environment:
#       - PUID=${PUID}
#       - PGID=${PGID}
#       - TZ=${TZ}
#     labels:
#       traefik.enable: "true"
#       traefik.backend: monitorr
#       traefik.protocol: http
#       traefik.port: 80
#       traefik.frontend.rule: Host:monitorr.${DOMAINNAME}
#       traefik.frontend.headers.SSLHost: monitorr.${DOMAINNAME}
#       traefik.docker.network: traefik_proxy
#       traefik.frontend.passHostHeader: "true"
#       traefik.frontend.headers.SSLForceHost: "true"
#       traefik.frontend.headers.SSLRedirect: "true"
#       traefik.frontend.headers.browserXSSFilter: "true"
#       traefik.frontend.headers.contentTypeNosniff: "true"
#       traefik.frontend.headers.forceSTSHeader: "true"
#       traefik.frontend.headers.STSSeconds: 315360000
#       traefik.frontend.headers.STSIncludeSubdomains: "true"
#       traefik.frontend.headers.STSPreload: "true"
#       traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
#       traefik.frontend.headers.frameDeny: "true"
#       traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
#       traefik.frontend.auth.forward.address: "http://oauth:4181"
#       traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
#       traefik.frontend.auth.forward.trustForwardHeader: "true"

# qDirStat - Directory Statistics
#   qdirstat:
#     image: jlesage/qdirstat
#     container_name: qdirstat
#     hostname: qdirstat
#     restart: unless-stopped
#     networks:
#       - traefik_proxy
# #    ports:
# #      - "${QDIRSTAT_PORT}:5800"
#     volumes:
#       - ${USERDIR}:/storage:ro
#       - ${USERDIR}/docker/qdirstat/config:/config:rw
#       - /media:/nas
#     environment:
#       USER_ID: ${PUID}
#       GROUP_ID: ${PGID}
#       UMASK: 002
#       TZ: ${TZ}
#       KEEP_APP_RUNNING: 1
#       CLEAN_TMP_DIR: 1
#       DISPLAY_WIDTH: 1600
#       DISPLAY_HEIGHT: 960
#       VNC_PASSWORD: ${QDIRSTAT_VNC_PASSWD}
#     labels:
#       traefik.enable: "true"
#       traefik.backend: qdirstat
#       traefik.protocol: http
#       traefik.port: 5800
#       traefik.frontend.rule: Host:qdirstat.${DOMAINNAME}
#       traefik.frontend.headers.SSLHost: qdirstat.${DOMAINNAME}
#       traefik.docker.network: traefik_proxy
#       traefik.frontend.passHostHeader: "true"
#       traefik.frontend.headers.SSLForceHost: "true"
#       traefik.frontend.headers.SSLRedirect: "true"
#       traefik.frontend.headers.browserXSSFilter: "true"
#       traefik.frontend.headers.contentTypeNosniff: "true"
#       traefik.frontend.headers.forceSTSHeader: "true"
#       traefik.frontend.headers.STSSeconds: 315360000
#       traefik.frontend.headers.STSIncludeSubdomains: "true"
#       traefik.frontend.headers.STSPreload: "true"
#       traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
#       traefik.frontend.headers.frameDeny: "true"
#       traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
#       traefik.frontend.auth.forward.address: "http://oauth:4181"
#       traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
#       traefik.frontend.auth.forward.trustForwardHeader: "true"
#
# # Guacamole - Remote desktop, SSH, on Telnet on any HTML5 Browser
# # Create all databases and tables first
#   guacamole:
#     image: guacamole/guacamole
#     container_name: guacamole
#     hostname: guacamole
#     restart: unless-stopped
#     networks:
#       - traefik_proxy
#       - default
#     ports:
#       - "${GUACAMOLE_PORT}:8080"
#     links:
#       - guacd:guacd
# #      - mariadb:mysql
# #    depends_on:
# #      - mariadb
#     environment:
#       GUACD_HOSTNAME: guacd
#       MYSQL_HOSTNAME: ${DB_HOST}
#       MYSQL_PORT: ${DB_PORT}
#       MYSQL_DATABASE: guacamole
#       MYSQL_USER: ${GUAC_MYSQL_USER}
#       MYSQL_PASSWORD: ${GUAC_MYSQL_PASSWORD}
#     labels:
#       traefik.enable: "true"
#       traefik.backend: guacamole
#       traefik.protocol: http
#       traefik.port: 8080
#       traefik.frontend.rule: "Host:guac.${DOMAINNAME}; AddPrefix: /guacamole"
#       traefik.frontend.headers.SSLHost: guac.${DOMAINNAME}
#       traefik.docker.network: traefik_proxy
#       traefik.frontend.passHostHeader: "true"
#       traefik.frontend.headers.SSLForceHost: "true"
#       traefik.frontend.headers.SSLRedirect: "true"
#       traefik.frontend.headers.browserXSSFilter: "true"
#       traefik.frontend.headers.contentTypeNosniff: "true"
#       traefik.frontend.headers.forceSTSHeader: "true"
#       traefik.frontend.headers.STSSeconds: 315360000
#       traefik.frontend.headers.STSIncludeSubdomains: "true"
#       traefik.frontend.headers.STSPreload: "true"
#       traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
#       traefik.frontend.headers.frameDeny: "true"
#       traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
#       traefik.frontend.auth.forward.address: "http://oauth:4181"
#       traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
#       traefik.frontend.auth.forward.trustForwardHeader: "true"
#
# # Guacamole Daemon - Needed for Guacamole
#   guacd:
#     image: guacamole/guacd
#     container_name: guacd
#     hostname: guacd
#     restart: unless-stopped
#
# # StatPing - Status Page & Monitoring Server
#   statping:
#     image: hunterlong/statping
#     container_name: statping
#     hostname: statping
#     restart: unless-stopped
#     networks:
#       - traefik_proxy
#       - default
#     ports:
#       - "${STATPING_PORT}:8080"
#     volumes:
#       - ${USERDIR}/docker/statping:/app
#     environment:
#       VIRTUAL_HOST: localhost
#       VIRTUAL_PORT: 8080
#       DB_CONN: postgres
#       DB_HOST: postgres
#       DB_USER: ${STATPING_DB_USER}
#       DB_PASS: ${STATPING_DB_PASS}
#       DB_DATABASE: ${STATPING_DB}
#       IS_DOCKER: "true"
#       DISABLE_LOGS: "false"
#       NAME: StatPing
#       DESCRIPTION: Monitor web services
#     labels:
#       traefik.enable: "true"
#       traefik.backend: statping
#       traefik.protocol: http
#       traefik.port: 8080
#       traefik.frontend.rule: "Host:statping.${DOMAINNAME}"
#       traefik.frontend.headers.SSLHost: statping.${DOMAINNAME}
#       traefik.docker.network: traefik_proxy
#       traefik.frontend.passHostHeader: "true"
#       traefik.frontend.headers.SSLForceHost: "true"
#       traefik.frontend.headers.SSLRedirect: "true"
#       traefik.frontend.headers.browserXSSFilter: "true"
#       traefik.frontend.headers.contentTypeNosniff: "true"
#       traefik.frontend.headers.forceSTSHeader: "true"
#       traefik.frontend.headers.STSSeconds: 315360000
#       traefik.frontend.headers.STSIncludeSubdomains: "true"
#       traefik.frontend.headers.STSPreload: "true"
#       traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
#       traefik.frontend.headers.frameDeny: "true"
#       traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
# #      traefik.frontend.auth.forward.address: "http://oauth:4181"
# #      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
# #      traefik.frontend.auth.forward.trustForwardHeader: "true"
#
# ############################# MAINTENANCE
#
# # Ouroboros - Automatic Docker Container Updates
#   ouroboros:
#     image: pyouroboros/ouroboros
#     container_name: ouroboros
#     hostname: ouroboros
#     restart: unless-stopped
#     networks:
#       - default
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock
#     environment:
#       TZ: ${TZ}
#       INTERVAL: 86400
#       LOG_LEVEL: debug
#       SELF_UPDATE: "true"
#       CLEANUP: "true"
#       IGNORE: traefik influxdb hassio_dns homeassistant hassio_supervisor addon_core_check_config addon_62c7908d_autobackup plexms
#       NOTIFIERS: 'tgram://${TGRAM_BOT_TOKEN}/${TGRAM_CHAT_ID}/'
#
# # Docker-GC - Automatic Docker Garbage Collection
# # Create docker-gc-exclude file
#   dockergc:
#     image: clockworksoul/docker-gc-cron:latest
#     container_name: docker-gc
#     hostname: docker-gc
#     restart: unless-stopped
#     network_mode: none
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock
#       - ${USERDIR}/docker/docker-gc/docker-gc-exclude:/etc/docker-gc-exclude
#     environment:
#       CRON: 0 0 * * *
#       FORCE_IMAGE_REMOVAL: 1
#       FORCE_CONTAINER_REMOVAL: 0
#       GRACE_PERIOD_SECONDS: 604800
#       DRY_RUN: 0
#       CLEAN_UP_VOLUMES: 1
#       TZ: ${TZ}
